import{_ as i,r as d,o as r,c as o,a as t,b as n,d as e,e as s}from"./app-6e895db1.js";const c={},l=s(`<h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
	<span class="token property">width</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>
	<span class="token property">height</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>
	<span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
	<span class="token property">animation</span><span class="token punctuation">:</span> myfirst 5s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token atrule"><span class="token rule">@keyframes</span> myfirst</span> <span class="token punctuation">{</span>
  <span class="token selector">from</span> <span class="token punctuation">{</span> 
    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> 
  <span class="token punctuation">}</span>
  <span class="token selector">to</span> <span class="token punctuation">{</span> 
    <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span> 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><h3 id="keyframes" tabindex="-1"><a class="header-anchor" href="#keyframes" aria-hidden="true">#</a> @keyframes</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@keyframes</span> animationname</span> <span class="token punctuation">{</span> <span class="token selector">keyframes-selector</span> <span class="token punctuation">{</span> css-styles<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>animationname</td><td>必需的。定义animation的名称。</td></tr><tr><td>keyframes-selector</td><td>必需的。动画持续时间的百分比，可以写多个。<br>0-100%<br>from (和0%相同)<br>to (和100%相同)</td></tr><tr><td>css-styles</td><td>必需的。CSS样式</td></tr></tbody></table><h3 id="animation" tabindex="-1"><a class="header-anchor" href="#animation" aria-hidden="true">#</a> animation</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation</span><span class="token punctuation">:</span> name duration timing-function delay iteration-count direction fill-mode play-state<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td><a href="#animation-name">name</a></td><td>规定 @keyframes 动画的名称。</td></tr><tr><td><a href="#animation-duration">duration</a></td><td>动画执行完成需要的时间。默认值为 0，意味着没有动画效果。</td></tr><tr><td><a href="#animation-timing-function">timing-function</a></td><td>动画的速度曲线。默认是 &quot;ease&quot;。</td></tr><tr><td><a href="#animation-delay">delay</a></td><td>动画开始前等待的时间，以秒或毫秒计。默认值为0</td></tr><tr><td><a href="#animation-iteration-count">iteration-count</a></td><td>动画被播放的次数。默认是 1。</td></tr><tr><td><a href="#animation-direction">direction</a></td><td>动画是否在下一周期逆向地播放。默认是 &quot;normal&quot;。</td></tr><tr><td><a href="#animation-fill-mode">fill-mode</a></td><td>规定当动画不播放时（当动画完成时，或当动画有一个延迟未开始播放时），要应用到元素的样式。</td></tr><tr><td><a href="#animation-play-state">play-state</a></td><td>规定动画是否正在运行或暂停，可以控制动画的暂定和进行。默认是 &quot;running&quot;。</td></tr></tbody></table><h3 id="animation-name" tabindex="-1"><a class="header-anchor" href="#animation-name" aria-hidden="true">#</a> animation-name</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation-name</span><span class="token punctuation">:</span> keyframename|none<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>keyframename</td><td>指定要绑定到选择器的关键帧的名称</td></tr><tr><td>none</td><td>默认。指定有没有动画（可用于覆盖从级联的动画）</td></tr></tbody></table><h3 id="animation-duration" tabindex="-1"><a class="header-anchor" href="#animation-duration" aria-hidden="true">#</a> animation-duration</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation-duration</span><span class="token punctuation">:</span> time<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>time</td><td>动画执行完成需要的时间。默认值为 0，意味着没有动画效果。</td></tr></tbody></table><h3 id="animation-timing-function" tabindex="-1"><a class="header-anchor" href="#animation-timing-function" aria-hidden="true">#</a> animation-timing-function</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation-timing-function</span><span class="token punctuation">:</span> value<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>animation-timing-function 使用的数学函数，称为 <strong>三次贝塞尔曲线</strong>，速度曲线。</p></blockquote><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>ease</td><td>默认。开始慢，中间快，结尾慢。</td></tr><tr><td>ease-in</td><td>开始慢，中间和结尾都快。</td></tr><tr><td>ease-out</td><td>开始和中间都快，结尾慢。</td></tr><tr><td>ease-in-out</td><td>开始慢，中间快，结尾慢。中间比 ease 慢。</td></tr><tr><td>linear</td><td>动画从头到尾的速度是相同的。</td></tr><tr><td>cubic-bezier(n, n, n, n)</td><td>自定义 cubic-bezier 函数，取值范围（0-1）。</td></tr></tbody></table>`,19),p={href:"http://yisibl.github.io/cubic-bezier",target:"_blank",rel:"noopener noreferrer"},u={href:"https://cubic-bezier.com/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/timing-function",target:"_blank",rel:"noopener noreferrer"},m=s(`<h3 id="animation-delay" tabindex="-1"><a class="header-anchor" href="#animation-delay" aria-hidden="true">#</a> animation-delay</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation-delay</span><span class="token punctuation">:</span> time<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>time</td><td>可选。定义动画开始前等待的时间，以秒或毫秒计。默认值为0</td></tr></tbody></table><h3 id="animation-iteration-count" tabindex="-1"><a class="header-anchor" href="#animation-iteration-count" aria-hidden="true">#</a> animation-iteration-count</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> value<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>n</td><td>默认值：1，一个数字，定义应该播放多少次动画</td></tr><tr><td>infinite</td><td>指定动画应该播放无限次（永远）</td></tr></tbody></table><h3 id="animation-direction" tabindex="-1"><a class="header-anchor" href="#animation-direction" aria-hidden="true">#</a> animation-direction</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation-direction</span><span class="token punctuation">:</span> normal|reverse|alternate|alternate-reverse|initial|inherit<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>normal</td><td>默认值。动画按正常播放。</td></tr><tr><td>reverse</td><td>动画反向播放。</td></tr><tr><td>alternate</td><td>动画在奇数次（1、3、5...）正向播放，在偶数次（2、4、6...）反向播放。</td></tr><tr><td>alternate-reverse</td><td>动画在奇数次（1、3、5...）反向播放，在偶数次（2、4、6...）正向播放。</td></tr><tr><td>initial</td><td>设置该属性为它的默认值。</td></tr><tr><td>inherit</td><td>从父元素继承该属性。</td></tr></tbody></table><h3 id="animation-fill-mode" tabindex="-1"><a class="header-anchor" href="#animation-fill-mode" aria-hidden="true">#</a> animation-fill-mode</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation-fill-mode</span><span class="token punctuation">:</span> none|forwards|backwards|both|initial|inherit<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>none</td><td>默认值。动画在动画执行之前和之后不会应用任何样式到目标元素。</td></tr><tr><td>forwards</td><td>动画结束后，元素的样式将设置为动画的最后一帧的样式；</td></tr><tr><td>backwards</td><td>动画等待的那段时间内，元素的样式将设置为动画第一帧的样式；（初始效果和第一帧效果不一样时才能看得出来）</td></tr><tr><td>both</td><td>相当于同时配置了backwards和forwards，意味着在动画等待和动画结束状态，元素将分别应用动画第一帧和最后一帧的样式。</td></tr><tr><td>initial</td><td>设置该属性为它的默认值。</td></tr><tr><td>inherit</td><td>从父元素继承该属性。</td></tr></tbody></table><h3 id="animation-play-state" tabindex="-1"><a class="header-anchor" href="#animation-play-state" aria-hidden="true">#</a> animation-play-state</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">animation-play-state</span><span class="token punctuation">:</span> paused|running<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>paused</td><td>指定暂停动画</td></tr><tr><td>running</td><td>默认值。指定正在运行的动画</td></tr></tbody></table>`,15);function b(v,k){const a=d("ExternalLinkIcon");return r(),o("div",null,[l,t("ul",null,[t("li",null,[t("a",p,[n("中文"),e(a)])]),t("li",null,[t("a",u,[n("英文"),e(a)])]),t("li",null,[t("a",h,[n("MDN"),e(a)])])]),m])}const g=i(c,[["render",b],["__file","051501.html.vue"]]);export{g as default};
