import{_ as a,o as s,c as t,a as n,e}from"./app-6e895db1.js";const o={},l=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"提升页面性能的方法有哪些"),n("ol",null,[n("li",null,"资源压缩合并，减少http请求"),n("li",null,"非核心代码异步加载 --> 异步加载的方式 --> 异步加载的区别"),n("li",null,"利用浏览器缓存 --> 缓存的分类 --> 缓存的原理"),n("li",null,"使用CDN"),n("li",null,"DNS预解析")])],-1),p=e(`<h2 id="非核心代码异步加载" tabindex="-1"><a class="header-anchor" href="#非核心代码异步加载" aria-hidden="true">#</a> 非核心代码异步加载</h2><h3 id="异步加载的方式及区别" tabindex="-1"><a class="header-anchor" href="#异步加载的方式及区别" aria-hidden="true">#</a> 异步加载的方式及区别</h3><p><strong>动态脚本的加载</strong></p><p>创建并插入DOM，实现动态加载js。</p><p><strong>defer</strong></p><p>在html解析完执行，按先后顺序。</p><p><strong>async</strong></p><p>在html解析完执行，顺序不定，按文件实际解析结束的时间为准。</p><h2 id="利用浏览器缓存" tabindex="-1"><a class="header-anchor" href="#利用浏览器缓存" aria-hidden="true">#</a> 利用浏览器缓存</h2><h3 id="缓存的分类及原理" tabindex="-1"><a class="header-anchor" href="#缓存的分类及原理" aria-hidden="true">#</a> 缓存的分类及原理</h3><p><strong>强缓存</strong></p><p>本地有缓存，直接拿过来用。</p><ul><li><p><strong>Expires</strong> Expires: Thu, 21Jan 2017 23:39:02 GMT<br> 过期时间，服务器的绝对时间，客户端和服务器的时间可能不一致，所以产生误差</p></li><li><p><strong>Cache-Control</strong> Cache-Control: max-age=3600<br> 因为Expires的缺点，所以又有了Cache-Control。相对时间，3600s内有效。如果这两个时间都下发了，以后者为准。</p></li></ul><p><strong>协商缓存</strong></p><p>本地有缓存，问一下服务器是否有效，确定不过期，再继续使用。</p><ul><li><p><strong>Last-Modified</strong> <strong>If-Modified-Since</strong> Last-Modified: Web, 26 Jan 2017 00:31:11 GMT<br> Last-Modified 下发时间，If-Modified-Since 请求时给服务器携带的</p></li><li><p><strong>Etag</strong> <strong>If-None-Match</strong><br> Etag 下发时间到期了，但是内容并没有变化，为解决这个问题，服务器下发文件时会下发一个tag，如果过了强缓存，向服务器确认是否有效时，会通过If-None-Match携带这个Etag。</p></li></ul><h2 id="dns预解析" tabindex="-1"><a class="header-anchor" href="#dns预解析" aria-hidden="true">#</a> DNS预解析</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- html5默认关闭a链接的预解析，这里是手动打开预解析 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>x-dns-prefetch-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>on<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token comment">&lt;!-- 预解析 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dns-prefetch<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>//url.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),r=[l,p];function c(i,u){return s(),t("div",null,r)}const h=a(o,[["render",c],["__file","031401.html.vue"]]);export{h as default};
