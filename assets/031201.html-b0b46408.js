import{_ as a,r as s,o as i,c as d,a as e,b as t,d as l,e as r}from"./app-6e895db1.js";const c={},o={class:"custom-container tip"},p=e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])],-1),m=e("p",{class:"custom-container-title"},"学习资料",-1),u={href:"https://segmentfault.com/a/1190000009315989",target:"_blank",rel:"noopener noreferrer"},h=r(`<h2 id="npm-信息查询" tabindex="-1"><a class="header-anchor" href="#npm-信息查询" aria-hidden="true">#</a> npm 信息查询</h2><ul><li>npm view vuepress-theme-reco version 查看依赖的最新版本</li><li>npm view vuepress-theme-reco versions 查看依赖的所有版本</li><li>npm view vuepress-theme-reco 查看依赖的信息</li><li>npm info vuepress-theme-reco 查看依赖的信息和 dist-tag</li></ul><h2 id="npm-安装" tabindex="-1"><a class="header-anchor" href="#npm-安装" aria-hidden="true">#</a> npm 安装</h2><ul><li>npm install 模块：安装好后不写入package.json中</li><li>npm install -g 模块：全局安装好后不写入package.json中</li><li>npm install 模块 --save 安装好后写入package.json的dependencies中（生产环境依赖）</li><li>npm install 模块 --save-dev 安装好后写入package.json的devDepencies中（开发环境依赖）</li></ul><h2 id="npm-卸载" tabindex="-1"><a class="header-anchor" href="#npm-卸载" aria-hidden="true">#</a> npm 卸载</h2><ul><li>npm uninstall 模块：删除模块，但不删除模块留在package.json中的对应信息</li><li>npm uninstall 模块 --save 删除模块，同时删除模块留在package.json中dependencies下的对应信息</li><li>npm uninstall 模块 --save-dev 删除模块，同时删除模块留在package.json中devDependencies下的对应信息</li></ul><h2 id="npm-发布" tabindex="-1"><a class="header-anchor" href="#npm-发布" aria-hidden="true">#</a> npm 发布</h2><p><strong>第一次</strong></p><p>在终端输入npm adduser，提示输入账号，密码和邮箱，然后将提示创建成功</p><p><strong>非第一次</strong></p><p>在终端输入npm login，然后输入你创建的账号和密码，和邮箱，登陆</p><ol><li>进入项目，然后再登录；</li><li>npm publish</li></ol><p><strong>发布测试包</strong></p><p>在測試版本中的package.json我們改成這樣 &quot;version&quot;: &quot;1.0.6-beta&quot;,</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> publish <span class="token parameter variable">--tag</span><span class="token operator">=</span>beta
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>发布组织里的包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 先将名字改为@vuepress-reco/theme-cli</span>
<span class="token function">npm</span> publish <span class="token parameter variable">--access</span> public
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> vuepress-theme-reco@beta
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="npm-撤销" tabindex="-1"><a class="header-anchor" href="#npm-撤销" aria-hidden="true">#</a> npm 撤销</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> unpublish reco-fetch@1.0.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><ol><li>根据规范，只有在发包的 <strong>24小时内</strong> 才允许撤销发布的包（ unpublish is only allowed with versions published in the last 24 hours）</li><li>即使你撤销了发布的包，<strong>发包的时候也不能再和被撤销的包的名称和版本重复了</strong></li><li>如果报权限方面的错，加上--force</li></ol></blockquote><p><code>npm unpublish</code> 的推荐替代命令：<code>npm deprecate &lt;pkg&gt;[@&lt;version&gt;] &lt;message&gt;</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> deprecate vuepress-theme-reco <span class="token string">&#39;这个包我已经不再维护了哟～&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="npm-弃用" tabindex="-1"><a class="header-anchor" href="#npm-弃用" aria-hidden="true">#</a> npm 弃用</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> deprecate vuepress-theme-reco-cli@1.0.0 <span class="token string">&quot;WARNING: This project(vuepress-theme-reco-cli) has been renamed to @vuepress-reco/theme-cli. Install using @vuepress-reco/theme-cli instead.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="npm-版本控制" tabindex="-1"><a class="header-anchor" href="#npm-版本控制" aria-hidden="true">#</a> npm 版本控制</h2><p><strong>版本号规则</strong></p><p>对于 &quot;version&quot;:&quot;x.y.z&quot;，x、y、z 分别对应的是 <code>major</code>, <code>minor</code>, <code>patch</code></p><ol><li>修复bug,小改动，增加z</li><li>增加了新特性，但仍能向后兼容，增加y</li><li>有很大的改动，无法向后兼容,增加x</li></ol><p>npm 允许使用特殊符号，指定所要使用的版本范围，假定当前版本是1.0.4</p><ul><li>只接受补丁包：1.0 或者 1.0.x 或者 ~1.0.4</li><li>只接受小版本和补丁包：1 或者 1.x 或者 ^1.0.4</li><li>接受所有更新：* or x</li></ul><p>示例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>~2.2.1 // 接受2.2.1，不接受2.3.0
^2.2.1 // 接受2.2.1和2.3.0

~2.2 // 接受2.2.0和2.2.1，不接受2.3.0
^2.2 // 接受2.2.0、2.2.1和2.3.0

~2 // 接受2.0.0、2.1.0、2.2.0、2.2.1和2.3.0
^2 // 接受2.0.0、2.1.0、2.2.0、2.2.1和2.3.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>npm version</strong></p><p>为了方便用户更改版本号，<code>npm</code> 有 <code>npm version</code> 这个命令来自动更改版本号，同时帮忙 <code>commit</code>。 比如说 当前版本是 <code>1.1.1</code>，当执行 <code>npm version patch -m &#39;[patch]&#39;</code> 的时候，会自动把package.json 里面的 version 改为 <code>1.1.2</code> ，同时git会多一个 <code>commit log [patch]</code>,这次改动便是更改package.json。 如果执行了 prepatch，版本号会从 <code>1.1.1</code> 变成 <code>1.1.2-0</code></p><p>我们称版本号的三位分别是 <code>大号.中号.小号-预发布号</code></p><table><thead><tr><th>npm version</th><th>功能</th></tr></thead><tbody><tr><td>major</td><td>1. 如果没有预发布号，则直接升级一位大号，其他位都置为0<br> 2. 如果有预发布号： <br>     a. 中号和小号都为0，则不升级大号，而将预发布号删掉。即2.0.0-1变成2.0.0，这就是预发布的作用<br>     b. 如果中号和小号有任意一个不是0，那边会升级一位大号，其他位都置为0，清空预发布号。即 2.0.1-0变成3.0.0</td></tr><tr><td>minor</td><td>1. 如果没有预发布号，则升级一位中号，大号不动，小号置为空<br> 2. 如果有预发布号: <br>     a. 如果小号为0，则不升级中号，将预发布号去掉<br>     b. 如果小号不为0，同理没有预发布号</td></tr><tr><td>patch</td><td>1. 如果没有预发布号：直接升级小号，去掉预发布号<br> 2. 如果有预发布号：去掉预发布号，其他不动</td></tr><tr><td>premajor</td><td>直接升级大号，中号和小号置为0，增加预发布号为0</td></tr><tr><td>preminor</td><td>直接升级中号，小号置为0，增加预发布号为0</td></tr><tr><td>prepatch</td><td>直接升级小号，增加预发布号为0</td></tr><tr><td>prerelease</td><td>1. 如果没有预发布号：增加小号，增加预发布号为0<br> 2. 如果有预发布号，则升级预发布号</td></tr></tbody></table><h2 id="tag" tabindex="-1"><a class="header-anchor" href="#tag" aria-hidden="true">#</a> Tag</h2><p>tag是可以随意命名的，<code>npm publish</code> 默认会发布到 <code>latest</code> 这个tag上，最新的测试版，一般是发布到 <code>next</code> 上。</p><p>发布包带上标签 <code>npm publish --tag next</code>。</p><p><code>npm dist-tag add my-package@version tag</code> ，给my-package设置tag，对应到版本version。</p><p>发布scope包 <code>npm publish --access public</code></p><h2 id="lerna" tabindex="-1"><a class="header-anchor" href="#lerna" aria-hidden="true">#</a> Lerna</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建项目</span>
lerna create @vuepress-reco/vuepress-plugin-pagation

<span class="token comment"># </span>
lerna bootstrap

<span class="token comment"># 发布正式版</span>
lerna publish

<span class="token comment"># 发布测试版</span>
lerna publish --dist-tag next
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45);function v(b,g){const n=s("ExternalLinkIcon");return i(),d("div",null,[e("div",o,[p,m,e("p",null,[e("a",u,[t("npm-参考手册"),l(n)])])]),h])}const x=a(c,[["render",v],["__file","031201.html.vue"]]);export{x as default};
