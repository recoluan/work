import{_ as l,r as o,o as i,c,a,d as s,w as e,b as t,e as p}from"./app-6e895db1.js";const r={},u={class:"table-of-contents"},d=p(`<h2 id="前端错误的分类" tabindex="-1"><a class="header-anchor" href="#前端错误的分类" aria-hidden="true">#</a> 前端错误的分类</h2><ol><li>即时运行错误：代码错误</li><li>资源加载错误</li></ol><h2 id="错误的捕获方式" tabindex="-1"><a class="header-anchor" href="#错误的捕获方式" aria-hidden="true">#</a> 错误的捕获方式</h2><h3 id="即时运行错误捕获方式" tabindex="-1"><a class="header-anchor" href="#即时运行错误捕获方式" aria-hidden="true">#</a> 即时运行错误捕获方式</h3><ol><li>trt...catch</li><li>window.onerror(window.addEventListener(&#39;error&#39;))</li></ol><h3 id="资源加载错误" tabindex="-1"><a class="header-anchor" href="#资源加载错误" aria-hidden="true">#</a> 资源加载错误</h3><ol><li>object.onerror（不会冒泡，所以window.onerror监听不到）</li><li>performance.getEntries()（高级浏览器会有这个方法，这个方法可以拿到已经正常加载的资源）</li><li>Error事件捕获（虽然冒泡监听不到，但是可以通过捕获监听）<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="延伸-跨域的js运行错误可以捕获吗-错误提示是什么-怎么处理" tabindex="-1"><a class="header-anchor" href="#延伸-跨域的js运行错误可以捕获吗-错误提示是什么-怎么处理" aria-hidden="true">#</a> 延伸：跨域的js运行错误可以捕获吗？错误提示是什么？怎么处理？</h3><p>可以捕获到，错误提示只是 <code>Script error</code> ，错误行号、列号、详情都不可见，如果要获得完整的错误提示，需要做到下面两个操作：</p><ol><li>客户端：在script标签增加crossorigin属性</li><li>服务端：设置js资源响应头 Access-Control-Allow-Origin: *</li></ol><h2 id="上报错误的基本原理" tabindex="-1"><a class="header-anchor" href="#上报错误的基本原理" aria-hidden="true">#</a> 上报错误的基本原理</h2><ol><li>利用ajax通信的上报方式</li><li>利用Image对象的上报方式<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&#39;http://baidu.com/tesjk?r=tksjk &#39;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,12);function h(k,m){const n=o("router-link");return i(),c("div",null,[a("nav",u,[a("ul",null,[a("li",null,[s(n,{to:"#前端错误的分类"},{default:e(()=>[t("前端错误的分类")]),_:1})]),a("li",null,[s(n,{to:"#错误的捕获方式"},{default:e(()=>[t("错误的捕获方式")]),_:1}),a("ul",null,[a("li",null,[s(n,{to:"#即时运行错误捕获方式"},{default:e(()=>[t("即时运行错误捕获方式")]),_:1})]),a("li",null,[s(n,{to:"#资源加载错误"},{default:e(()=>[t("资源加载错误")]),_:1})]),a("li",null,[s(n,{to:"#延伸-跨域的js运行错误可以捕获吗-错误提示是什么-怎么处理"},{default:e(()=>[t("延伸：跨域的js运行错误可以捕获吗？错误提示是什么？怎么处理？")]),_:1})])])]),a("li",null,[s(n,{to:"#上报错误的基本原理"},{default:e(()=>[t("上报错误的基本原理")]),_:1})])])]),d])}const v=l(r,[["render",h],["__file","031501.html.vue"]]);export{v as default};
