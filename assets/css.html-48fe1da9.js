import{_ as s,r as d,o as i,c as r,a as t,b as e,d as l,e as a}from"./app-6e895db1.js";const c={},o=a('<h2 id="css选择器的优先级是怎样的" tabindex="-1"><a class="header-anchor" href="#css选择器的优先级是怎样的" aria-hidden="true">#</a> CSS选择器的优先级是怎样的？</h2><p>CSS选择器的优先级是：内联样式 &gt; ID选择器 &gt; 类选择器 = 属性选择器 = 伪类选择器 &gt; 元素选择器 = 关系选择器 = 伪元素选择器 &gt; 通配符选择器</p><ul><li>!important 特殊性最高，详情访问重要性</li><li>对于内联样式，加1000</li><li>对于选中器中给定的ID属性值，加0100</li><li>对于选择器中给定的类属性值，属性选择或伪类，加0010</li><li>对于选择器中给定的元素选择器和伪元素，加0001</li><li>结合符和通配符选择器对特殊性没有任何贡献，0000</li></ul><h3 id="样式继承" tabindex="-1"><a class="header-anchor" href="#样式继承" aria-hidden="true">#</a> 样式继承</h3><p>样式不仅可以应用到指定的元素，还会应用到它的后代元素。在两个比较特殊的情况需要注意：</p><ul><li>一个是在HTML中，应用到body元素的背景样式可以传递到html元素；</li><li>另一个是 a 标签不会继承父元素的文本样式</li></ul><h3 id="可以继承的属性" tabindex="-1"><a class="header-anchor" href="#可以继承的属性" aria-hidden="true">#</a> 可以继承的属性</h3><p>文本属性、字体属性、列表属性、表格属性，和分类属性的 <code>cursor</code>、<code>visibility</code>，和尺寸属性的 <code>line-height</code>。</p><h4 id="文本属性" tabindex="-1"><a class="header-anchor" href="#文本属性" aria-hidden="true">#</a> 文本属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">color</td><td style="text-align:center;">设置文本颜色</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">direction</td><td style="text-align:center;">规定文本的方向</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">line-height</td><td style="text-align:center;">设置行高</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">letter-spacing</td><td style="text-align:center;">设置字符间距</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">text-align</td><td style="text-align:center;">对齐元素中的文本</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">text-decoration</td><td style="text-align:center;">向文本中添加修饰</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">text-indent</td><td style="text-align:center;">缩进元素中文本的的首行</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">text-shadow</td><td style="text-align:center;">设置文本阴影</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">text-transform</td><td style="text-align:center;">控制元素中的字母</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">white-space</td><td style="text-align:center;">设置元素中空白的处理方式</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">word-spacing</td><td style="text-align:center;">设置字间距</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr></tbody></table><h4 id="字体属性" tabindex="-1"><a class="header-anchor" href="#字体属性" aria-hidden="true">#</a> 字体属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">font</td><td style="text-align:center;">简写属性</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">font-family</td><td style="text-align:center;">设置字体系列</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">font-size</td><td style="text-align:center;">设置字体的尺寸</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">font-style</td><td style="text-align:center;">设置字体风格</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">font-variant</td><td style="text-align:center;">以小型大写字体或者正常字体显示文本</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">font-weight</td><td style="text-align:center;">设置字体的粗细</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr></tbody></table><h4 id="列表属性" tabindex="-1"><a class="header-anchor" href="#列表属性" aria-hidden="true">#</a> 列表属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">list-style</td><td style="text-align:center;">简写属性，用于把所有用于列表的属性设置在一个声明中</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">list-style-image</td><td style="text-align:center;">将图片设置为列表项标志</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">list-style-position</td><td style="text-align:center;">设置列表项中列表项标志的位置</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">list-style-type</td><td style="text-align:center;">设置列表项标志的类型</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr></tbody></table><h4 id="表格属性" tabindex="-1"><a class="header-anchor" href="#表格属性" aria-hidden="true">#</a> 表格属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">border-collapse</td><td style="text-align:center;">设置是否把表格单元合并为单一的边框</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">border-spacing</td><td style="text-align:center;">设置分隔单元格边框的距离</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">caption-side</td><td style="text-align:center;">设置表格标题的位置</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">empty-cells</td><td style="text-align:center;">设置是否显示表格中的空单元格</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">table-layout</td><td style="text-align:center;">设置显示单元、行和列的算法</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr></tbody></table><h4 id="分类属性" tabindex="-1"><a class="header-anchor" href="#分类属性" aria-hidden="true">#</a> 分类属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">clear</td><td style="text-align:center;">设置一个元素的侧面是否允许其他浮动的元素</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">cursor</td><td style="text-align:center;">规定当指向某元素之上时显示的指针类型</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">display</td><td style="text-align:center;">设置是否及如何显示元素</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">float</td><td style="text-align:center;">定义元素在哪个方向浮动</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">position</td><td style="text-align:center;">把元素放置到一个静态的，相对的，绝对的，或者固定的位置</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">visibility</td><td style="text-align:center;">设置元素是否可见或不可见</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr></tbody></table><h4 id="尺寸属性" tabindex="-1"><a class="header-anchor" href="#尺寸属性" aria-hidden="true">#</a> 尺寸属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">height</td><td style="text-align:center;">设置元素的高度</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">line-height</td><td style="text-align:center;">设置行高</td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">max-height</td><td style="text-align:center;">设置元素的最大高度</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">max-width</td><td style="text-align:center;">设置元素的最带宽度</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">min-height</td><td style="text-align:center;">设置元素的最小高度</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">min-width</td><td style="text-align:center;">设置元素的最小宽度</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">width</td><td style="text-align:center;">设置元素的高度</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr></tbody></table><h4 id="轮廓属性" tabindex="-1"><a class="header-anchor" href="#轮廓属性" aria-hidden="true">#</a> 轮廓属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">outline</td><td style="text-align:center;">在一个声明中设置所有的轮廓属性</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">outline-color</td><td style="text-align:center;">设置轮廓的颜色</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">outline-style</td><td style="text-align:center;">设置轮廓的样式</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">outline-width</td><td style="text-align:center;">设置轮廓的宽度</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr></tbody></table><h4 id="背景属性" tabindex="-1"><a class="header-anchor" href="#背景属性" aria-hidden="true">#</a> 背景属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">background</td><td style="text-align:center;">设置背景属性</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">background-color</td><td style="text-align:center;">规定要使用的背景颜色</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">background-position</td><td style="text-align:center;">规定背景图像的位置</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">background-size</td><td style="text-align:center;">规定背景图片的尺寸</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">background-origin</td><td style="text-align:center;">规定背景图片的定位区域</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">background-repeat</td><td style="text-align:center;">规定如何重复背景图像</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">background-clip</td><td style="text-align:center;">规定背景的绘制区域</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">background-attachment</td><td style="text-align:center;">规定背景是否固定或者随着页面的其余部分滚动</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">background-image</td><td style="text-align:center;">规定要使用的背景图像</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr></tbody></table><h4 id="盒子属性" tabindex="-1"><a class="header-anchor" href="#盒子属性" aria-hidden="true">#</a> 盒子属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">padding</td><td style="text-align:center;">简写属性，作用是在一个声明中设置元素的所在内边距属性</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">padding-bottom</td><td style="text-align:center;">设置元素的下内边距</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">padding-left</td><td style="text-align:center;">设置元素的左内边距</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">padding-right</td><td style="text-align:center;">设置元素的右内边距</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">padding-top</td><td style="text-align:center;">设置元素的上内边距</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">border</td><td style="text-align:center;">简写属性，用于把对四个边的属性设置在一个声明中。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">border-style</td><td style="text-align:center;">用于设置元素所有边框的样式，或者单独的为各边设置边宽样式</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">border-width</td><td style="text-align:center;">简写属性，用于元素的所有边框设置宽度，或者单独的为各边边框设置宽度</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">border-color</td><td style="text-align:center;">简写属性，设置元素的所有边框中可见部分的颜色，或者为4个边分别</td><td style="text-align:center;">置颜色</td><td style="text-align:center;">No</td></tr><tr><td style="text-align:center;">margin</td><td style="text-align:center;">简写属性，在一个声明中设置所有外边距属性</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">margin-bottom</td><td style="text-align:center;">设置元素的下外边距</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">margin-left</td><td style="text-align:center;">设置元素的左外边距</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">margin-right</td><td style="text-align:center;">设置元素的右外边距</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">margin-top</td><td style="text-align:center;">设置元素的上外边距</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr></tbody></table><h4 id="定位属性" tabindex="-1"><a class="header-anchor" href="#定位属性" aria-hidden="true">#</a> 定位属性</h4><table><thead><tr><th style="text-align:center;">属性名</th><th style="text-align:center;">解释</th><th style="text-align:center;">继承性</th><th style="text-align:center;">是否属性值中拥有inherit</th></tr></thead><tbody><tr><td style="text-align:center;">position</td><td style="text-align:center;">把元素放置到一个静态的、相对的、绝对的、或固定的位置中。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">top</td><td style="text-align:center;">定义了一个定位元素的上外边距边界与其包含块上边界之间的偏移。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">right</td><td style="text-align:center;">定义了定位元素右外边距边界与其包含块右边界之间的偏移。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">bottom</td><td style="text-align:center;">定义了定位元素下外边距边界与其包含块下边界之间的偏移。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">left</td><td style="text-align:center;">定义了定位元素左外边距边界与其包含块左边界之间的偏移。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">overflow</td><td style="text-align:center;">设置当元素的内容溢出其区域时发生的事情。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">clip</td><td style="text-align:center;">设置元素的形状。元素被剪入这个形状之中，然后显示出来。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">vertical-align</td><td style="text-align:center;">设置元素的垂直对齐方式。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;">z-index</td><td style="text-align:center;">设置元素的堆叠顺序。</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr></tbody></table><h3 id="层叠" tabindex="-1"><a class="header-anchor" href="#层叠" aria-hidden="true">#</a> 层叠</h3><p>CSS层叠样式表的层叠特性就是让样式层叠在一起，通过特殊性、重要性、来源及继承机制来排列层叠样式的顺序及选出胜出者。</p><ol><li><p>重要性和来源需要同时考虑，因为二者的结合使用与否会存在不同的顺序：</p><ul><li>不考虑来源的情况下，<code>!important</code> 最高。</li><li>在不考虑重要性的前提下，来源优先级顺序为： 读者的重要声明 &gt; 创作人员的重要声明 &gt; 创作人员的正常声明 &gt; 读者的正常声明 &gt; 用户代理声明(浏览器默认样式)</li><li>二者一起考虑的情况下，user(用户)的优先级大于author(作者)的优先级，这样做是试图平衡author(作者)和user(用户)。所以，最终的优先级排序为：user(用户)!important &gt; author(作者)!important &gt; author &gt; user &gt; user agent</li></ul></li><li><p>接着，对于非重要声明来说，按照特殊性排序。特殊性越高的规则，权重越大</p></li><li><p>最后，如果特殊性相同，则按照出现顺序排序。声明在样式表或文档中越靠后出现，权重越大。如果样式表中有通过@import导入的样式表，一般认为出现在导入样式表中的声明在前，主样式表的所有声明在后。</p></li></ol><h2 id="css有几种定位方式" tabindex="-1"><a class="header-anchor" href="#css有几种定位方式" aria-hidden="true">#</a> CSS有⼏种定位⽅式？</h2><ul><li>static 正常⽂档流定位，此时 top, right, bottom, left 和 z-index 属性⽆效，块级元素从上往下纵向排布，⾏级元素 从左向右排列</li><li>relative 没有跳出文本流，定位是相对于父级和兄弟节点</li><li>absolute 跳出文本流，是相对于父级且带有定位，如果父级没有定位属性，那么就会往上一级再找是否带定位，找到顶级之后如果还没有定位，就以 body 定位</li><li>fixed 元素相对于屏幕视⼝（viewport）的位置来指定元素位置</li><li>sticky 粘性定位，特性近似于relative和fixed的合体</li></ul><h2 id="link和-import的区别" tabindex="-1"><a class="header-anchor" href="#link和-import的区别" aria-hidden="true">#</a> link和@import的区别？</h2><ul><li>link 属于 XHTML标签，⽽ @import 是 CSS 提供的；</li><li>⻚⾯被加载时，link 会同时被加载，⽽ @import 引⽤的 CSS 会等到⻚⾯被加载完再加载；</li><li>import 只在 IE 5 以上才能识别，⽽ link 是 XHTML 标签，⽆兼容问题；</li><li>link ⽅式的样式权重⾼于 @import 的权重；</li><li>当使⽤ js 控制 dom 去改变样式的时候，只能使⽤ link 标签。</li></ul><h2 id="link和-import的区别-1" tabindex="-1"><a class="header-anchor" href="#link和-import的区别-1" aria-hidden="true">#</a> link和@import的区别？</h2><ul><li>link属于XHTML标签，⽽@import是CSS提供的。</li><li>⻚⾯被加载时，link会同时被加载，⽽@import引⽤的CSS会等到⻚⾯被加载完再加载。</li><li>import只在IE 5以上才能识别，⽽link是XHTML标签，⽆兼容问题。</li><li>link⽅式的样式权重⾼于@import的权重。</li><li>使⽤dom控制样式时的差别。当使⽤javascript控制dom去改变样式的时候，只能使⽤link标签，因为@import不是 dom可以控制的</li></ul><h2 id="有哪些方式-css-可以隐藏⻚面元素" tabindex="-1"><a class="header-anchor" href="#有哪些方式-css-可以隐藏⻚面元素" aria-hidden="true">#</a> 有哪些⽅式（CSS）可以隐藏⻚⾯元素？</h2><ul><li>opacity:0 ：本质上是将元素的透明度将为0，就看起来隐藏了，但是依然占据空间且可以交互</li><li>visibility:hidden : 与上⼀个⽅法类似的效果，占据空间，但是不可以交互了</li><li>overflow:hidden : 这个只隐藏元素溢出的部分，但是占据空间且不可交互</li><li>display:none : 这个是彻底隐藏了元素，元素从⽂档流中消失，既不占据空间也不交互，也不影响布局</li><li>z-index:-9999 : 原理是将层级放到底部，这样就被覆盖了，看起来隐藏了</li><li>transform: scale(0,0) : 平⾯变换，将元素缩放为0，但是依然占据空间，但不可交互</li></ul><h2 id="如何理解层叠上下文" tabindex="-1"><a class="header-anchor" href="#如何理解层叠上下文" aria-hidden="true">#</a> 如何理解层叠上下⽂？</h2><h3 id="是什么" tabindex="-1"><a class="header-anchor" href="#是什么" aria-hidden="true">#</a> 是什么？</h3><p>层叠上下⽂是HTML元素的三维概念，这些HTML元素在⼀条假想的相对于⾯向（电脑屏幕的）视窗或者⽹⻚的⽤户的 z 轴上延伸，HTML元素依据其⾃身属性按照优先级顺序占⽤层叠上下⽂的空间。</p><h3 id="如何产生" tabindex="-1"><a class="header-anchor" href="#如何产生" aria-hidden="true">#</a> 如何产⽣？</h3><blockquote><p>其实可以理解为如何脱离正常的文档流。</p></blockquote><p>触发⼀下条件则会产⽣层叠上下⽂：</p><ul><li>根元素 <code>(HTML)</code></li><li><code>z-index</code> 值不为 <code>auto</code> 的 绝对/相对定位</li><li>⼀个 <code>z-index</code> 值不为 <code>auto</code> 的 <code>flex</code> 项⽬ (flex item)，即：⽗元素 display: flex|inline-flex</li><li><code>opacity</code> 属性值⼩于 1 的元素</li><li><code>transform</code> 属性值不为 <code>none</code> 的元素</li><li><code>mix-blend-mode</code> 属性值不为 <code>normal</code> 的元素</li><li><code>filter</code> 值不为 <code>none</code> 的元素</li><li><code>perspective</code> 值不为 <code>none</code> 的元素</li><li><code>isolation</code> 属性被设置为 <code>isolate</code> 的元素</li><li><code>position: fixed</code> 在 <code>will-change</code> 中指定了任意 CSS 属性,即便你没有直接指定这些属性的值</li><li><code>-webkit-overflow-scrolling</code> 属性被设置 <code>touch</code> 的元素</li></ul>',46),g={href:"https://www.zhangxinxu.com/wordpress/2016/01/understand-css-stacking-context-order-z-index/",target:"_blank",rel:"noopener noreferrer"},x=a(`<h2 id="对媒体查询的理解" tabindex="-1"><a class="header-anchor" href="#对媒体查询的理解" aria-hidden="true">#</a> 对媒体查询的理解？</h2><h3 id="是什么-1" tabindex="-1"><a class="header-anchor" href="#是什么-1" aria-hidden="true">#</a> 是什么</h3><p>媒体查询由⼀个可选的媒体类型和零个或多个使⽤媒体功能的限制了样式表范围的表达式组成。媒体查询，添加⾃CSS3，允许内容的呈现针对⼀个特定范围的输出设备⽽进⾏裁剪，⽽不必改变内容本身,⾮常适合 web ⽹⻚应对不同型号的设备⽽做出对应的响应适配。</p><h3 id="如何使用" tabindex="-1"><a class="header-anchor" href="#如何使用" aria-hidden="true">#</a> 如何使⽤？</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 语法规范 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>media-query</span><span class="token punctuation">&gt;</span></span> = <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>media-condition</span><span class="token punctuation">&gt;</span></span> | [ not | only ]? <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>media-type</span><span class="token punctuation">&gt;</span></span> [ and <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>media-condition-without-or</span><span class="token punctuation">&gt;</span></span> ]?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- link元素中的CSS媒体查询 --&gt;</span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>only screen and (max-width: 800px)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example.css<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> 

<span class="token comment">&lt;!-- 样式表中的CSS媒体查询 --&gt;</span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"> 
<span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span> 
  <span class="token selector">.facet_sidebar</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> none
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span> 

<span class="token comment">&lt;!-- 样式表中的CSS媒体查询 --&gt;</span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>only screen and (max-width: 800px)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"> 
  <span class="token selector">.facet_sidebar</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> none
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),y={href:"https://www.cnblogs.com/xiaohuochai/p/5848612.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media",target:"_blank",rel:"noopener noreferrer"},p=a(`<h2 id="对盒模型的理解" tabindex="-1"><a class="header-anchor" href="#对盒模型的理解" aria-hidden="true">#</a> 对盒模型的理解</h2><h3 id="是什么-2" tabindex="-1"><a class="header-anchor" href="#是什么-2" aria-hidden="true">#</a> 是什么？</h3><p>浏览器的渲染引擎会根据标准之⼀的 CSS 基础框盒模型（CSS basic box model），将所有元素表示为⼀个个矩形的盒⼦，CSS 决定这些盒⼦的⼤⼩、位置以及属性（例如颜⾊、背 景、边框尺⼨…）。盒模型由content（内容）、padding（内边距）、border（边框）、margin（外边距）组成。</p><h3 id="标准盒模型和怪异盒模型有什么区别" tabindex="-1"><a class="header-anchor" href="#标准盒模型和怪异盒模型有什么区别" aria-hidden="true">#</a> 标准盒模型和怪异盒模型有什么区别</h3><p>计算宽高的方式不一样。标准盒模型 <code>width = content</code>，怪异盒模型 <code>width = border-left + padding-left + content + padding-right + border-right</code>，虽然现代浏览器默认使⽤ W3C 的标准盒模型，但是在不少情况下怪异盒模型更好⽤，于是W3C在css3中加⼊ <code>box-sizing </code>。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box // 标准盒模型 
<span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box // 怪异盒模型 
<span class="token property">box-sizing</span><span class="token punctuation">:</span> padding-box // ⽕狐的私有模型，没⼈⽤
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="bfc" tabindex="-1"><a class="header-anchor" href="#bfc" aria-hidden="true">#</a> BFC</h2><p>在解释BFC之前，先说一下文档流。我们常说的文档流其实分为定位流、浮动流和普通流三种。而普通流其实就是指BFC中的FC。FC是formatting context的首字母缩写，直译过来是格式化上下文，它是页面中的一块渲染区域，有一套渲染规则，决定了其子元素如何布局，以及和其他元素之间的关系和作用。常见的FC有BFC、IFC，还有GFC和FFC。</p><h3 id="是什么-3" tabindex="-1"><a class="header-anchor" href="#是什么-3" aria-hidden="true">#</a> 是什么</h3><p>BFC是block formatting context，也就是块级格式化上下文，它是⼀块独⽴的区域，让处于BFC内部的元素与外部的元素互相隔离。</p><h3 id="触发条件" tabindex="-1"><a class="header-anchor" href="#触发条件" aria-hidden="true">#</a> 触发条件</h3><ul><li>根元素，即HTML元素</li><li>float的值不为none</li><li>overflow的值不为visible</li><li>display的值为inline-block、table-cell、table-caption</li><li>position的值为absolute或fixed</li></ul><h3 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h3><ol><li>清除浮动</li><li>阻止margin重叠</li><li>两栏布局，防⽌⽂字环绕等</li></ol><h2 id="为什么有时候人们用translate来改变位置而不是定位" tabindex="-1"><a class="header-anchor" href="#为什么有时候人们用translate来改变位置而不是定位" aria-hidden="true">#</a> 为什么有时候⼈们⽤translate来改变位置⽽不是定位？</h2><p>translate()是transform的⼀个值。改变transform或opacity不会触发浏览器重新布局（reflow）或重绘（repaint），只会触发复合（compositions）。</p><p>⽽改变绝对定位会触发重新布局，进⽽触发重绘和复合。transform使浏览器为元素创建⼀个 GPU 图层，但改变绝对定位会使⽤到 CPU。 因此translate()更⾼效，可以缩短平滑动画的绘制时间。 ⽽translate改变位置时，元素依然会占据其原始空间，绝对定位就不会发⽣这种情况。</p>`,17),u={href:"https://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/",target:"_blank",rel:"noopener noreferrer"},b=t("h2",{id:"伪类和伪元素的区别是什么",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#伪类和伪元素的区别是什么","aria-hidden":"true"},"#"),e(" 伪类和伪元素的区别是什么？")],-1),m=t("ul",null,[t("li",null,"伪类（pseudo-class）其实就是一种选择器。是⼀个以冒号(:)作为前缀，被添加到⼀个选择器末尾的关键字，用于给某些特定的元素添加样式时使用。"),t("li",null,"伪元素其实是一种dom。⽤于创建⼀些不在⽂档树中的元素，并为其添加样式。⽐如说，我们可以通过::before来在⼀个元素前增加⼀些⽂本，并为这些⽂本添加样式。虽然⽤户可以看到这些⽂本，但是这些⽂本实际上不在⽂档树中。")],-1),k=t("p",null,"参考：",-1),Y={href:"https://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.zhangxinxu.com/wordpress/2015/06/about-letter-x-of-css/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.cnblogs.com/liangdecha/p/9629150.html",target:"_blank",rel:"noopener noreferrer"};function N(_,w){const n=d("ExternalLinkIcon");return i(),r("div",null,[o,t("blockquote",null,[t("p",null,[e("拓展阅读："),t("a",g,[e("层叠上下⽂-张鑫旭"),l(n)])])]),x,t("blockquote",null,[t("p",null,[e("拓展阅读："),t("a",y,[e("深⼊理解CSS Media媒体查询"),l(n)]),e("、"),t("a",h,[e("@media"),l(n)])])]),p,t("blockquote",null,[t("p",null,[e("拓展阅读: "),t("a",u,[e("CSS3 3D transform变换-张鑫旭"),l(n)])])]),b,m,k,t("ol",null,[t("li",null,[t("a",Y,[e("CSS深入理解vertical-align和line-height的基友关系"),l(n)])]),t("li",null,[t("a",f,[e("字母 'x' 在CSS世界中的角色和故事"),l(n)])]),t("li",null,[t("a",v,[e("CSS3--clip-path练习"),l(n)])])])])}const C=s(c,[["render",N],["__file","css.html.vue"]]);export{C as default};
